# Timed regexp powered kickbans by C.J.Edwards (aka [Brain])
# ----------------------------------------------------------------
#
# #chatspike @ irc.chatspike.net
#
# Use /TKB to set a timed kickban, /KBLIST to list the pending bans.
#
# ----------------------------------------------------------------
#
# Example:
# /TKB ^test[0-9].+ 60 You are a floodnet, go away
#
# Kickbans all users in the current channel that match the regexp
# "^test[0-9].+" (start with 'test', followed by a character 0 thru
# 9, followed by at least one character. Bans them for 60 seconds
# after which the ban is undone, kicking with the reason 'You are a
# floodnet, go away'.
# 
#

IRC::register("TKB - Timed regexp kickbans", "1.0", "", "");

# ----------------------------------------------------------------

IRC::add_command_handler("TKB", "do_tkb");
IRC::add_command_handler("KBLIST", "list_tkb");

# ----------------------------------------------------------------

sub next_tkb
{
	my $nick = shift(@bans);
	my $chan = shift(@bans);
	my $serv = shift(@bans);
	my $banmask = shift(@bans);
	my $atime = shift(@bans);
	IRC::print_with_channel("\0038*** Expiring timed ban on $nick after $atime secs",$chan,$serv);
	IRC::command_with_server("/mode $chan -bb $banmask $nick", $serv); 
}

sub list_tkb
{
   my $active_channel = IRC::get_info(2);
   my $active_serv = IRC::get_info(3);
   for ($i = 0; $i < @bans; $i+=5)
   {
	   IRC::print_with_channel("\0038--- Currently active timed bans ---",$active_channel,$active_serv);
	   IRC::print_with_channel("\0034".@bans[$i]."/".@bans[$i+1]."@". @bans[$i+2]." ".@bans[$i+3].", ".@bans[$i+4]."s",$active_channel,$active_serv);
   }
   return 1;
}

sub do_tkb
{
   my $a = $_[0];
   my ($nick,$atime,$reason) = split(/ /,$a,3);
   my $active_channel = IRC::get_info(2);
   my $active_serv = IRC::get_info(3);
   my @dump = IRC::user_list_short($active_channel, $active_serv);
   $banned=0;
   for ($q = 0; $q < @dump; $q+=2)
   {
	   if (@dump[$q] =~ /$nick/i)
	   {
	   	my $banmask = @dump[$q+1];
	   	$banmask =~ s/(a|e|i|o|u)/*/ig;
	   	$banmask =~ s/(m|w|p|t|g|c|n)/?/ig;
	   	$banmask =~ s/m/M/g;
	   	$banmask =~ s/w/W/g;
	   	$banmask =~ s/s/S/g;
	   	$banmask =~ s/k/K/g;
	   	$banmask =~ s/l/L/g;
	   	$banmask =~ s/x/X/g;
	   	$banmask =~ s/\?\?/*/ig;
	   	$banmask =~ s/\*\*/*/ig;
	   	push @bans, @dump[$q], $active_channel, $active_serv, $banmask, $atime;
	   	IRC::command("/mode $active_channel +bb $banmask ".@dump[$q]);
	   	IRC::command("/kick ".@dump[$q]." $channel$reason [Matching regexp '$nick', \002$atime\002 second ban]");
	   	IRC::add_timeout_handler($atime*1000,"next_tkb");
		$banned++;
   	   }
   }
   IRC::print_with_channel("\0038*** $banned nicks matched the expression '$nick'.",$active_channel,$active_serv);
   return 1;
}
